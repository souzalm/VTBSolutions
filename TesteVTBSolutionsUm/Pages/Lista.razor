@using TesteVTBSolutionsUm.Services.Interfaces;

@page "/lista"
@inject IOportunidadesService oportunidadeService

<PageTitle>Lista de Oportunidades do Pipeline</PageTitle>

<h3>Lista de Oportunidades do Pipeline</h3>

<IgbDataGrid Height ="400px" DataSource="@datum">
    @*<IgxColumGroup Header="Contatos">
        @foreach (var oid in datum.Select(d => d.Contatos) as List<Contato>)
            {
                <IgbColumn Field="oid" Sortable=true Resizable=true></IgbColumn>
            }
    </IgxColumGroup>*@
</IgbDataGrid>

@*<MatTable Items="@datum" Class="mat-elevation-z5" AllowSelection="true">
    <MatTableHeader>
        <th>Id</th>
    </MatTableHeader>
    <MatTableRow>
        @foreach (var data in datum)
        {
            <td>@data._id</td>
        }
    </MatTableRow>
</MatTable>*@

@*
    <table class="table">
    <thead>
        <tr>
            <th>Id</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var data in datum)
        {
            <tr>
                <td>@data._id</td>
            </tr>
        }
    </tbody>
</table>
*@

@code {
    public Datum[] datum;

    protected override async Task OnInitializedAsync()
    {
        datum = await oportunidadeService.FindAll();
    }
}
